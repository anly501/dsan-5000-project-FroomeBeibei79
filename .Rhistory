setwd("/Users/huoxingrui/Desktop/5000\ Data\ Science\ \&\ Analytics/Homework/Homework\ 2/HW-02/codes-and-outputs ")
setwd(/Users/huoxingrui/Desktop/5000\ Data\ Science\ \&\ Analytics/Homework/Homework\ 2/HW-02/codes-and-outputs )
setwd("/Users/huoxingrui/Desktop/5000\ Data\ Science\ \&\ Analytics/Homework/Homework\ 2/HW-02 ")
getwd()
ls
install.packages("readxl")
getwd()
setwd("Desktop/5000 Data Science & Analytics/project website")
gender <- read_xls("data/dl220")
gender <- read_excel("data/dl220")
library(readxl)
gender <- read_excel("data/dl220")
library(readxl)
gender <- read_excel("data/dl220.xls")
View(gender)
gender <- gender[-(1:2),]
colnames(gender) <- gender[1,]
gender <- gender[-1,]
gender <- gender[1:(nrow(gender) -4),]
gender <- gender %>%
rename(Year = .)
library(readxl)
library(tidyverse)
gender <- read_excel("data/dl220.xls")
gender <- gender[-(1:2),]
colnames(gender) <- gender[1,]
gender <- gender[-1,]
gender <- gender[1:(nrow(gender) -4),]
gender <- gender %>%
rename(Year = .)
gender <- gender %>%
rename(Year = )
gender <- gender %>%
rename(Year =" ")
gender <- gender %>%
rename(Year =null)
gender <- gender %>%
rename(Year =col(1))
colnames(gender)[1] <- "Year"
gender <- gender[-1,]
library(readxl)
library(tidyverse)
gender <- read_excel("data/dl220.xls")
gender <- gender[-(1:2),]
colnames(gender) <- gender[1,]
gender <- gender[-1,]
gender <- gender[1:(nrow(gender) -4),]
colnames(gender)[1] <- "Year"
gender <- gender[-1,]
colnames1 <- paste0(colnames(gender), data[1,])
colnames1 <- paste0(colnames(gender), unlist(gender[1,]))
colnames(gender) ,- colnames1
gender <- gender[-1,]
colnames(gender) ,- colnames1
colnames1 <- paste0(colnames(gender), unlist(gender[1,]))
colnames(gender) <- colnames1
gender <- gender[-1,]
library(readxl)
library(tidyverse)
gender <- read_excel("data/dl220.xls")
gender <- gender[-(1:2),]
colnames(gender) <- gender[1,]
gender <- gender[-1,]
gender <- gender[1:(nrow(gender) -4),]
colnames(gender)[1] <- "Year"
gender <- gender[-1,]
colnames1 <- paste0(colnames(gender), unlist(gender[1,]))
colnames(gender) <- colnames1
gender <- gender[-1,]
gender <- gender %>%
rename(Year = YearNA)
gender <- gender %>%
rename(YearNa = Year)
gender <- gender %>%
rename(Year = YearNA)
names <- which(duplicated(colnames(gender)))
for (col_index in names){
colnames(gender)[col_index] <- paste0(colnames(gender)[col_index], "_", col_index)
}
gender1 <- t(gender)
View(gender1)
colnames(gender1) <- gender1[1,]
gender1 <- gender1[-1,]
gender <- read_excel("data/dl220.xls")
View(gender)
library(readxl)
library(tidyverse)
gender <- read_excel("data/dl220.xls")
gender <- gender[-(1:2),]
colnames(gender) <- gender[1,]
gender <- gender[-1,]
gender <- gender[1:(nrow(gender) -4),]
colnames(gender)[1] <- "Year"
gender <- gender[-1,]
colnames1 <- paste0(colnames(gender), unlist(gender[1,]))
colnames(gender) <- colnames1
gender <- gender[-1,]
names <- which(duplicated(colnames(gender)))
for (col_index in names){
colnames(gender)[col_index] <- paste0(colnames(gender)[col_index], "_", col_index)
}
accounts <- read.csv("../data/accounts.csv", header = TRUE)
cards <- read.csv("../data/cards.csv", header = TRUE)
clients <- read.csv("../data/clients.csv", header = TRUE)
links <- read.csv("../data/links.csv", header = TRUE)
payment_orders <- read.csv("../data/payment_orders.csv", header = TRUE)
transactions <- read.csv("../data/transactions.csv", header = TRUE)
districts <- read.csv("../data/districts.csv", header = TRUE)
loans <- read.csv("../data/loans.csv", header = TRUE)
library(tidyverse)
#cards common key: link id, card id
cards <- cards %>%
rename(card_type = type,
card_id = id)
card_link <- full_join(cards, links,by = "link_id")
#here is to count the number of credit cards per account
card_link1 <- card_link %>%
group_by(account_id) %>%
summarise(credit_cards = sum(!is.na(card_id)))
#Account
accounts <- accounts %>%
rename(account_id = id,
open_date = date)#here is to set the account date as the open date
#District
districts1 <- districts %>%
rename(district_id = id,
district_name = name) %>%
select(c(district_name, district_id))
#here I first join the account and districts together
df <- full_join(accounts, districts1, by = "district_id")
df <- df %>%
select(-district_id) %>%
select(account_id, district_name, open_date, statement_frequency)
#clients
clients <- clients %>%
rename(client_id = id)
#links
links <- links %>%
rename(link_id = id)
#here is to count the number of customers for each account
client_link <- full_join(clients,links, by = "client_id")
client_link1 <- client_link %>%
group_by(account_id) %>%
summarise(num_customers = n())
#and join them into the data set by account id
df <- full_join(df, client_link1, by = "account_id")
#cards common key: link id, card id
cards <- cards %>%
rename(card_type = type,
card_id = id)
card_link <- full_join(cards, links,by = "link_id")
#here is to count the number of credit cards per account
card_link1 <- card_link %>%
group_by(account_id) %>%
summarise(credit_cards = sum(!is.na(card_id)))
#join them into the data frame
df <- full_join(card_link1, df, by = "account_id")
#Since I have already done with loans in the first step
#here  I will just join it to the data set
loans <- loans %>%
rename(loan_id = id) %>%
pivot_longer(cols =  c(-loan_id, -account_id, -date, -amount, -payments),
names_to = 'loan_info', values_to = 'counts') %>%
filter(counts == "X")
loans <- loans %>%
mutate(loan_term = str_extract(loan_info, "\\d+")) %>%
mutate(loan_status = str_extract(loan_info, ".$")) %>%
mutate(loan_default = loan_status) %>%
mutate(loan_status = case_when(loan_status == "A" ~ "expired",
loan_status == "B" ~ "expired",
loan_status == "C" ~ "current",
loan_status == "D" ~ "current")) %>%
mutate(loan_default = case_when(loan_default == "B" ~ "TRUE",
loan_default == "D" ~ "TRUE",
loan_default == "A" ~ "FALSE",
loan_default == "C" ~ "FALSE")) %>%
select(-counts, -loan_info)
accounts <- read.csv("../data/accounts.csv", header = TRUE)
setws(Desktop/5000 Data Science & Analytics/Homework/Homework2/HW-02/codes-and-outputs)
setwd(Desktop/5000 Data Science & Analytics/Homework/Homework2/HW-02/codes-and-outputs)
setwd(Desktop/5000_Data Science & Analytics/Homework/Homework2/HW-02/codes-and-outputs)
getwd()
setwd(../Homework/Homework2/HW-02/codes-and-outputs)
setwd(Homework/Homework2/HW-02/codes-and-outputs)
